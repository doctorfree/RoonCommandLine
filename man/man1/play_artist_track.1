.\" Automatically generated by Pandoc 2.17.1.1
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "PLAY_ARTIST_TRACK" "1" "February 13, 2022" "play_artist_track 2.0.1" "User Manual"
.hy
.SH NAME
.PP
play_artist_track - Play Roon Library Track by Artist
.SH SYNOPSIS
.PP
\f[B]play_artist_track\f[R] [ ARTIST ] [ TRACK ]
.SH DESCRIPTION
.PP
Plays Roon Library artist\[aq]s track matching the specified track name
or substring.
This command is invoked by \[dq]roon -a artist [-T track]\[dq].
.SH COMMAND LINE OPTIONS
.TP
\f[B]ARTIST\f[R]
Provide an artist name, in quotes if it contains spaces, or a
case-sensitive substring.
All Roon library artist names matching the provided artist name or
containing the substring will be searched for tracks
.TP
\f[B]TRACK\f[R]
Provide a track name, in quotes if it contains spaces, or a
case-sensitive substring.
All Roon library track names matching the provided track name or
containing the substring will be returned and the first one returned
will be played.
.SH EXAMPLES
.TP
\f[B]play_artist_track Beatles Yesterday\f[R]
Will play the first track returned in a list of all Roon library track
names with titles containing the string \[dq]Yesterday\[dq] by the
artists whose name contains \[dq]Beatles\[dq]
.SH AUTHORS
.PP
Written by Ronald Record <github@ronrecord.com>
.SH LICENSING
.PP
PLAY_ARTIST_TRACK is distributed under an Open Source license.
See the file LICENSE in the PLAY_ARTIST_TRACK source distribution for
information on terms & conditions for accessing and otherwise using
PLAY_ARTIST_TRACK and for a DISCLAIMER OF ALL WARRANTIES.
.SH BUGS
.PP
Submit bug reports online at:
<https://gitlab.com/doctorfree/RoonCommandLine/issues>
.SH SEE ALSO
.PP
\f[B]clone_pyroon\f[R](1), \f[B]get_core_ip\f[R](1),
\f[B]get_zone_info\f[R](1), \f[B]get_zones\f[R](1),
\f[B]list_albums\f[R](1), \f[B]list_artist_albums\f[R](1),
\f[B]list_artists\f[R](1), \f[B]list_composers\f[R](1),
\f[B]list_genre_albums\f[R](1), \f[B]list_genre_artists\f[R](1),
\f[B]list_genres\f[R](1), \f[B]list_playlists\f[R](1),
\f[B]list_radio\f[R](1), \f[B]list_tags\f[R](1),
\f[B]list_zones\f[R](1), \f[B]play_album\f[R](1),
\f[B]play_artist\f[R](1), \f[B]play_artist_album\f[R](1),
\f[B]play_artist_track\f[R](1), \f[B]play_composer\f[R](1),
\f[B]play_genre\f[R](1), \f[B]play_genre_album\f[R](1),
\f[B]play_genre_artist\f[R](1), \f[B]play_playlist\f[R](1),
\f[B]play_radio\f[R](1), \f[B]play_tag\f[R](1), \f[B]roon\f[R](1),
\f[B]set_zone\f[R](1), \f[B]set_zone_group\f[R](1),
\f[B]zone_command\f[R](1)
.PP
Full documentation and sources at:
<https://gitlab.com/doctorfree/RoonCommandLine>
