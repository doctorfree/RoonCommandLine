.\" Automatically generated by Pandoc 2.19.2
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "LIST_ARTISTS" "1" "December 05, 2021" "list_artists 2.0.1" "User Manual"
.hy
.SH NAME
.PP
list_artists - List Roon Library Artists
.SH SYNOPSIS
.PP
\f[B]list_artists\f[R] [ ARTIST ] [ EXARTIST ]
.SH DESCRIPTION
.PP
Lists Roon Library artists matching the specified artist name or
substring.
Optionally, a second argument can be provided which specifies an
exclusion string.
Artists whose name includes the exclusion string will not be listed.
.SH COMMAND LINE OPTIONS
.TP
\f[B]ARTIST\f[R]
Provide an artist name, in quotes if it contains spaces, or a
case-sensitive substring.
All Roon library artist names matching the provided artist name or
containing the substring will be returned
.TP
\f[B]EXARTIST\f[R]
Provide an artist exclusion string, in quotes if it contains spaces.
No Roon library artist names including the provided artist exclusion
string will be listed
.SH EXAMPLES
.TP
\f[B]list_artists Young\f[R]
Will return a list of Roon library artist names, one per line, that
contain the string \[dq]Young\[dq]
.TP
\f[B]list_artists Young Neil\f[R]
Will return a list of Roon library artist names, one per line, that
contain the string \[dq]Young\[dq] but do not contain the string
\[dq]Neil\[dq]
.SH AUTHORS
.PP
Written by Ronald Record <github@ronrecord.com>
.SH LICENSING
.PP
LIST_ARTISTS is distributed under an Open Source license.
See the file LICENSE in the LIST_ARTISTS source distribution for
information on terms & conditions for accessing and otherwise using
LIST_ARTISTS and for a DISCLAIMER OF ALL WARRANTIES.
.SH BUGS
.PP
Submit bug reports online at:
<https://github.com/doctorfree/RoonCommandLine/issues>
.SH SEE ALSO
.PP
\f[B]clone_pyroon\f[R](1), \f[B]get_core_ip\f[R](1),
\f[B]get_zone_info\f[R](1), \f[B]get_zones\f[R](1),
\f[B]list_albums\f[R](1), \f[B]list_artist_albums\f[R](1),
\f[B]list_artists\f[R](1), \f[B]list_composers\f[R](1),
\f[B]list_genre_albums\f[R](1), \f[B]list_genre_artists\f[R](1),
\f[B]list_genres\f[R](1), \f[B]list_playlists\f[R](1),
\f[B]list_radio\f[R](1), \f[B]list_tags\f[R](1),
\f[B]list_zones\f[R](1), \f[B]play_album\f[R](1),
\f[B]play_artist\f[R](1), \f[B]play_artist_album\f[R](1),
\f[B]play_artist_track\f[R](1), \f[B]play_composer\f[R](1),
\f[B]play_genre\f[R](1), \f[B]play_genre_album\f[R](1),
\f[B]play_genre_artist\f[R](1), \f[B]play_playlist\f[R](1),
\f[B]play_radio\f[R](1), \f[B]play_tag\f[R](1), \f[B]roon\f[R](1),
\f[B]set_zone\f[R](1), \f[B]set_zone_group\f[R](1),
\f[B]zone_command\f[R](1)
.PP
Full documentation and sources at:
<https://github.com/doctorfree/RoonCommandLine>
.PP
The corresponding Python script,
\f[I]/usr/local/Roon/api/list_artists.py\f[R], can be invoked directly
as:
.PP
\f[B]python3 /usr/local/Roon/api/list_artists.py [ options]\f[R]
.PP
Where [ options ] are described in the following usage message:
.IP
.nf
\f[C]
usage: list_artists.py [-h] [-a ARTIST] [-x EXARTIST] [-z ZONE]

optional arguments:
  -h, --help            show this help message and exit
  -a ARTIST, --artist ARTIST
                        artist search term
  -x EXARTIST, --exartist EXARTIST
                        artist exclude search term
  -z ZONE, --zone ZONE  zone selection
\f[R]
.fi
