.\" Automatically generated by Pandoc 2.19.2
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "PLAY_TRACK" "1" "May 22, 2024" "play_track 2.0.1" "User Manual"
.hy
.SH NAME
.PP
play_track - Play specified Roon Library track
.SH SYNOPSIS
.PP
\f[B]play_track\f[R] [ -z ZONE ] [ TRACK ]
.SH DESCRIPTION
.PP
Plays Roon Library track matching the specified track name or substring.
This command is invoked by \[dq]roon [-T track]\[dq].
.SH COMMAND LINE OPTIONS
.TP
\f[B]-z ZONE\f[R]
Specify the Roon Zone in which to play.
If no zone is specified the default zone will be used.
.TP
\f[B]TRACK\f[R]
Provide a track name, in quotes if it contains spaces, or a
case-sensitive substring.
All Roon library track names matching the provided track name or
containing the substring will be returned and the first one returned
will be played.
.SH EXAMPLES
.TP
\f[B]play_track Yesterday\f[R]
Will play the first track returned in a list of all Roon library track
names with titles containing the string \[dq]Yesterday\[dq]
.TP
\f[B]play_track \[dq]Love Me Do\[dq]\f[R]
Will play the first track returned in a list of all Roon library track
names with titles containing the string \[dq]Love Me Do\[dq]
.SH AUTHORS
.PP
Written by Ronald Record <github@ronrecord.com>
.SH LICENSING
.PP
PLAY_TRACK is distributed under an Open Source license.
See the file LICENSE in the PLAY_TRACK source distribution for
information on terms & conditions for accessing and otherwise using
PLAY_TRACK and for a DISCLAIMER OF ALL WARRANTIES.
.SH BUGS
.PP
Submit bug reports online at:
<https://github.com/doctorfree/RoonCommandLine/issues>
.SH SEE ALSO
.PP
\f[B]get_core_ip\f[R](1), \f[B]get_zone_info\f[R](1),
\f[B]get_zones\f[R](1), \f[B]list_albums\f[R](1),
\f[B]list_artist_albums\f[R](1), \f[B]list_artists\f[R](1),
\f[B]list_composers\f[R](1), \f[B]list_genre_albums\f[R](1),
\f[B]list_genre_artists\f[R](1), \f[B]list_genres\f[R](1),
\f[B]list_playlists\f[R](1), \f[B]list_radio\f[R](1),
\f[B]list_tags\f[R](1), \f[B]list_zones\f[R](1),
\f[B]play_album\f[R](1), \f[B]play_artist\f[R](1),
\f[B]play_artist_album\f[R](1), \f[B]play_artist_track\f[R](1),
\f[B]play_composer\f[R](1), \f[B]play_genre\f[R](1),
\f[B]play_genre_album\f[R](1), \f[B]play_genre_artist\f[R](1),
\f[B]play_playlist\f[R](1), \f[B]play_radio\f[R](1),
\f[B]play_tag\f[R](1), \f[B]roon\f[R](1), \f[B]set_zone\f[R](1),
\f[B]set_zone_group\f[R](1), \f[B]zone_command\f[R](1)
.PP
Full documentation and sources at:
<https://github.com/doctorfree/RoonCommandLine>
.PP
The corresponding Python script,
\f[I]/usr/local/Roon/api/play_track.py\f[R], can be invoked directly as:
.PP
\f[B]python3 /usr/local/Roon/api/play_track.py [ options]\f[R]
.PP
Where [ options ] are described in the following usage message:
.IP
.nf
\f[C]
usage: play_track.py [-h] [-t TRACK] [-z ZONE]

optional arguments:
  -h, --help            show this help message and exit
  -t TRACK, --track TRACK
                        track search term
  -z ZONE, --zone ZONE  zone selection
\f[R]
.fi
