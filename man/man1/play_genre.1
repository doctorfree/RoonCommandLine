.\" Automatically generated by Pandoc 2.19.2
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "PLAY_GENRE" "1" "December 05, 2021" "play_genre 2.0.1" "User Manual"
.hy
.SH NAME
.PP
play_genre - Play Roon Library Genre
.SH SYNOPSIS
.PP
\f[B]play_genre\f[R] [ -z ZONE ] [ GENRE ] [ EXGENRE ]
.SH DESCRIPTION
.PP
Plays the Roon Library genre named \f[I]GENRE\f[R].
Search for Roon Library genres whose name contains the case-sensitive
string \f[I]GENRE\f[R].
If there is a match on the search substring then \f[I]play_genre\f[R]
will play the first genre that matches.
If more than one Roon Library genre name matches the search substring
then \f[I]play_genre\f[R] will return a list of matching genre names.
.SH COMMAND LINE OPTIONS
.TP
\f[B]-z ZONE\f[R]
Specify the Roon Zone in which to play.
If no zone is specified the default zone will be used.
.TP
\f[B]GENRE\f[R]
Provide an genre name, in quotes if it contains spaces, or a
case-sensitive substring.
A Roon library genre name matching the provided genre name or containing
the substring will be played if a match is found.
.TP
\f[B]EXGENRE\f[R]
Provide a genre exclusion string, in quotes if it contains spaces.
No Roon library genre names including the provided genre exclusion
string will be played
.SH EXAMPLES
.TP
\f[B]play_genre Rock\f[R]
Will play the Roon library genre whose name contains the string
\[dq]Rock\[dq].
If more than one genre name matches, it will play the first match and
list all matches
.TP
\f[B]play_genre Rock Pop\f[R]
Will play the Roon library genre whose name contains the string
\[dq]Rock\[dq] but not the string \[dq]Pop\[dq]
.SH AUTHORS
.PP
Written by Ronald Record <github@ronrecord.com>
.SH LICENSING
.PP
PLAY_GENRE is distributed under an Open Source license.
See the file LICENSE in the PLAY_GENRE source distribution for
information on terms & conditions for accessing and otherwise using
PLAY_GENRE and for a DISCLAIMER OF ALL WARRANTIES.
.SH BUGS
.PP
Submit bug reports online at:
<https://github.com/doctorfree/RoonCommandLine/issues>
.SH SEE ALSO
.PP
\f[B]clone_pyroon\f[R](1), \f[B]get_core_ip\f[R](1),
\f[B]get_zone_info\f[R](1), \f[B]get_zones\f[R](1),
\f[B]list_albums\f[R](1), \f[B]list_artist_albums\f[R](1),
\f[B]list_artists\f[R](1), \f[B]list_composers\f[R](1),
\f[B]list_genre_albums\f[R](1), \f[B]list_genre_artists\f[R](1),
\f[B]list_genres\f[R](1), \f[B]list_playlists\f[R](1),
\f[B]list_radio\f[R](1), \f[B]list_tags\f[R](1),
\f[B]list_zones\f[R](1), \f[B]play_album\f[R](1),
\f[B]play_artist\f[R](1), \f[B]play_artist_album\f[R](1),
\f[B]play_artist_track\f[R](1), \f[B]play_composer\f[R](1),
\f[B]play_genre\f[R](1), \f[B]play_genre_album\f[R](1),
\f[B]play_genre_artist\f[R](1), \f[B]play_playlist\f[R](1),
\f[B]play_radio\f[R](1), \f[B]play_tag\f[R](1), \f[B]roon\f[R](1),
\f[B]set_zone\f[R](1), \f[B]set_zone_group\f[R](1),
\f[B]zone_command\f[R](1)
.PP
Full documentation and sources at:
<https://github.com/doctorfree/RoonCommandLine>
.PP
The corresponding Python script,
\f[I]/usr/local/Roon/api/play_genre.py\f[R], can be invoked directly as:
.PP
\f[B]python3 /usr/local/Roon/api/play_genre.py [ options]\f[R]
.PP
Where [ options ] are described in the following usage message:
.IP
.nf
\f[C]
usage: play_genre.py [-h] [-g GENRE] [-x EXGENRE] [-z ZONE]

optional arguments:
  -h, --help            show this help message and exit
  -g GENRE, --genre GENRE
                        genre selection
  -x EXGENRE, --exgenre EXGENRE
                        genre exclude search term
  -z ZONE, --zone ZONE  zone selection
\f[R]
.fi
