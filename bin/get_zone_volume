#!/bin/bash
#
# shellcheck disable=SC1090,SC2220

ROON=/usr/local/Roon
ROONAPI=${ROON}/api
ROONETC=${ROON}/etc
ROONCONF=${ROONETC}/pyroonconf
SCRIPT=get_zone_attributes.py

[ -d ${ROONAPI} ] || exit 1

cd ${ROONAPI} || exit 1

[ -f $SCRIPT ] || exit 2

# Get the zone if it is set
if [ -f ${ROONCONF} ]
then
    . ${ROONCONF}
else
    DEFZONE=$(grep ^DefaultZone ${ROONETC}/roon_api.ini | awk -F '=' ' { print $2 } ')
    ${ROON}/bin/set_zone "${DEFZONE}"
    . ${ROONCONF}
fi

grparg=
number=
# Parse the arguments to get the command and zone
while getopts "gnz:" flag; do
    case $flag in
        g)
            grparg="-g"
            ;;
        n)
            number=1
            ;;
        z)
            ROON_ZONE="$OPTARG"
            ;;
    esac
done

have_python3=$(type -p python3)
have_jq=$(type -p jq)
if [ "${have_python3}" ]
then
  if [ "${have_jq}" ]
  then
    if [ "${number}" ]
    then
      python3 $SCRIPT ${grparg} -z "$ROON_ZONE" | jq -r '.[].volume.value?'
    else
      python3 $SCRIPT ${grparg} -z "$ROON_ZONE" | \
        jq -r '.[]? | "\(.display_name): Volume = \(.volume.value), Min = \(.volume.min), Max = \(.volume.max)"'
    fi
  else
    # TODO: Parse returned JSON without jq
    python3 $SCRIPT ${grparg} -z "$ROON_ZONE"
  fi
else
  if [ "${have_jq}" ]
  then
    if [ "${number}" ]
    then
      python $SCRIPT ${grparg} -z "$ROON_ZONE" | jq -r '.[].volume.value?'
    else
      python $SCRIPT ${grparg} -z "$ROON_ZONE" | \
        jq -r '.[]? | "\(.display_name): Volume = \(.volume.value), Min = \(.volume.min), Max = \(.volume.max)"'
    fi
  else
    # TODO: Parse returned JSON without jq
    python $SCRIPT ${grparg} -z "$ROON_ZONE"
  fi
fi

