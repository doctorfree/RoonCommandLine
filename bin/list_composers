#!/bin/bash
#
# shellcheck disable=SC1090,SC2220

ROON=/usr/local/Roon
ROONAPI=${ROON}/api
ROONETC=${ROON}/etc
ROONCONF=${ROONETC}/pyroonconf
LIST=list_composers.py
COMPOSER=
EXCOMPOSER=

[ -d ${ROONAPI} ] || exit 1

cd ${ROONAPI} || exit 1

[ -f $LIST ] || exit 2

ZONE=
listargs=
# Parse the arguments to get the zone
while getopts "qz:" flag; do
    case $flag in
        q)
            listargs="-q"
            ;;
        z)
            ZONE="$OPTARG"
            ;;
    esac
done
shift $(( OPTIND - 1 ))

[ "$1" ] && COMPOSER="$1"
[ "$2" ] && EXCOMPOSER="$2"

# Use a Python virtual environment
[ -f ${ROON}/venv/bin/activate ] && source ${ROON}/venv/bin/activate
[[ ":$PATH:" == *":/usr/local/Roon/venv/bin:"* ]] || {
  export PATH=/usr/local/Roon/venv/bin:${PATH}
}

DEFZONE=$(grep ^DefaultZone ${ROONETC}/roon_api.ini | awk -F '=' ' { print $2 } ')
# Remove leading and trailing spaces in DEFZONE
DEFZONE="$(echo -e "${DEFZONE}" | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//')"

# Get the zone if it is set
if [ -f ${ROONCONF} ]
then
    . ${ROONCONF}
else
    ${ROON}/bin/set_zone "${DEFZONE}"
    . ${ROONCONF}
fi

[ "${ZONE}" ] && {
    if [ "${ZONE}" == "default" ]; then
        ROON_ZONE="${DEFZONE}"
    else
        [ "${ZONE}" == "last" ] || ROON_ZONE="${ZONE}"
    fi
}
# Use all zones if no zone is specified or set
[ "${ROON_ZONE}" ] || ROON_ZONE="__all__"

[ "${COMPOSER}" ] || COMPOSER="__all__"

# Construct the exclusion args if passed
EXARGS="${listargs}"
[ "${EXCOMPOSER}" ] && EXARGS="${EXARGS} -x ${EXCOMPOSER}"

have_python3=$(type -p python3)
if [ "${have_python3}" ]
then
    python3 $LIST -c "$COMPOSER" -z "$ROON_ZONE" $EXARGS
else
    python $LIST -c "$COMPOSER" -z "$ROON_ZONE" $EXARGS
fi
