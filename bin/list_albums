#!/bin/bash
#
# shellcheck disable=SC1090,SC2220

ROON=/usr/local/Roon
ROONAPI=${ROON}/api
ROONETC=${ROON}/etc
ROONCONF=${ROONETC}/pyroonconf
LIST=list_albums.py
ALBUM=
EXALBUM=

[ -d ${ROONAPI} ] || exit 1

cd ${ROONAPI} || exit 1

[ -f $LIST ] || exit 2

listargs=
ZONE=
# Parse the arguments to get the zone
while getopts "qz:" flag; do
    case $flag in
        z)
            ZONE="$OPTARG"
            ;;
        q)
            listargs="-q"
            ;;
    esac
done
shift $(( OPTIND - 1 ))

# First argument is album name/substring, Second argument is album exclusion string
[ "$1" ] && ALBUM="$1"
[ "$2" ] && EXALBUM="$2"

# Use a Python virtual environment
[ -f ${ROON}/venv/bin/activate ] && source ${ROON}/venv/bin/activate
[[ ":$PATH:" == *":/usr/local/Roon/venv/bin:"* ]] || {
  export PATH=/usr/local/Roon/venv/bin:${PATH}
}

# Get the zone if it is set
if [ -f ${ROONCONF} ]
then
    . ${ROONCONF}
else
    DEFZONE=$(grep ^DefaultZone ${ROONETC}/roon_api.ini | awk -F '=' ' { print $2 } ')
    ${ROON}/bin/set_zone "${DEFZONE}"
    . ${ROONCONF}
fi
[ "${ZONE}" ] && ROON_ZONE="${ZONE}"
# Use all zones if no zone is specified or set
[ "${ROON_ZONE}" ] || ROON_ZONE="__all__"

[ "${ALBUM}" ] || ALBUM="__all__"

# Construct the exclusion args if passed
EXARGS="${listargs}"
[ "${EXALBUM}" ] && EXARGS="${EXARGS} -x ${EXALBUM}"

have_python3=$(type -p python3)
if [ "${have_python3}" ]
then
    python3 $LIST -a "$ALBUM" -z "$ROON_ZONE" $EXARGS
else
    python $LIST -a "$ALBUM" -z "$ROON_ZONE" $EXARGS
fi
