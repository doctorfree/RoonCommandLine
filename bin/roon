#!/bin/bash
#
# roon - frontend shell script to issue remote commands to Roon via SSH and the Roon API
#
#  Copyright 2021, Ronald Joe Record
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#
# Edit these two settings
#   The IP address of the system on which the Python Roon API is installed
server="XX.X.X.XXX"
#   The username that has public key authorized SSH access to the Python Roon API system
user="SSH_USERNAME"

album=
artist=
composer=
comm=
albumlist=
artistlist=
artalbumlist=
composerlist=
genrelist=
genartistlist=
genalbumlist=
playlistlist=
radiolist=
taglist=
playlist=
radio=
search=
setdefs=
showusage=1
showexamples=1
tag=
track=
zone=
zonegroup=
zonelist=

usage() {
  [ "${showusage}" ] && {
    printf "\nUsage: roon -A album -a artist -C composer -g genre -G zone_group"
    printf "\n\t-l [albums|artists|artalbums|composers|genres|genalbums|genartists|playlists|tags|zones]"
    printf "\n\t-c [group|ungroup|play|pause|stop|next|previous|shuffle|unshuffle|repeat|unrepeat|mute|unmute]"
    printf "\n\t-s search -p playlist -T track -t tag -z zone -L -S -r radio [-EuU]"
    printf "\n\tWhere:\n\t\t-A album selects an album to play"
    printf "\n\t\t-a artist selects an artist to list/play"
    printf "\n\t\t-C composer selects a composer to play"
    printf "\n\t\t-g genre selects a genre to list/play"
    printf "\n\t\t-p playlist selects a playlist to play"
    printf "\n\t\t-G zone_group specifies a zone grouping specified in roon_api.ini"
    printf "\n\t\t-L setup roon to execute local commands rather than remote via SSH"
    printf "\n\t\t-S Set Roon defaults in roon_api.ini"
    printf "\n\t\t-l [albums|artists|artalbums|composers|genres|genalbums|genartists|playlists|tags|zones]"
    printf "\n\t\t\tindicates list albums, artists, genres, albums in genre, artists in genre, playlists, tags, or Roon zones"
    printf "\n\t\t-r radio selects a live radio stream to play"
    printf "\n\t\t-s search specifies a term to search for in the lists retrieved with -l"
    printf "\n\t\t-T track specifies a track to play"
    printf "\n\t\t-t tag selects an tag to play"
    printf "\n\t\t-z zone selects the Roon Zone in which to play"
    printf "\n\t\t-c [group|ungroup|play|pause|playpause|stop|next|previous|shuffle|unshuffle|repeat|unrepeat|mute|unmute]"
    printf "\n\t\t\tissues the command in the selected zone"
    printf "\n\t\t-u displays a full usage message with examples"
    printf "\n\t\t-U displays a usage message without examples"
    printf "\n\t\t-E displays examples with no usage message"
    printf "\n\tCombine '-a artist' and '-A album' to play an album by a specified artist"
    printf "\n\tCombine '-a artist' and '-T track' to play a track by a specified artist"
    printf "\n\tCombine '-a artist' or '-A album' with '-g genre' to play an artist or album in a specified genre\n"
    printf "\n\tSpecial search term "__all__" matches all entries"
    printf "\n\tSpecial name "default" plays the default setting in roon_api.ini\n"
  }
  [ "${showexamples}" ] && {
    printf "\n\tExample invocations"
    printf "\n\t\tPlay artist:"
    printf "\n\t\t\troon -a \"Deep Purple\""
    printf "\n\t\tPlay album by artist:"
    printf "\n\t\t\troon -a \"Deep Purple\" -A Burn"
    printf "\n\t\tPlay track by artist:"
    printf "\n\t\t\troon -a \"Aretha Franklin\" -T Think"
    printf "\n\t\tPlay artist in specified zone:"
    printf "\n\t\t\troon -a \"Jethro Tull\" -z \"Mac Pro DAC\""
    printf "\n\t\tPlay genre:"
    printf "\n\t\t\troon -g Classical"
    printf "\n\t\tPlay default live radio:"
    printf "\n\t\t\troon -r default"
    printf "\n\t\tPlay playlist:"
    printf "\n\t\t\troon -p \"Bowie Favs\""
    printf "\n\t\tPlay next track:"
    printf "\n\t\t\troon -c next"
    printf "\n\t\tStop play in specified zone:"
    printf "\n\t\t\troon -c stop -z Kitchen"
    printf "\n\t\tMute a specified zone:"
    printf "\n\t\t\troon -c mute -z \"Mac Pro DAC\""
    printf "\n\t\tList all playlists containing the string 'Best':"
    printf "\n\t\t\troon -l playlists -s Best"
    printf "\n\t\tList albums by artist:"
    printf "\n\t\t\troon -l artalbums -a \"Deep Purple\""
    printf "\n\t\tList artists containing the string 'Will' in the 'Country' genre:"
    printf "\n\t\t\troon -l genartists -a Will -g Country"
    printf "\n\t\tList albums containing the string 'Magic' in the 'Rock' genre:"
    printf "\n\t\t\troon -l genalbums -A Magic -g Rock"
    printf "\n\t\tPlay artist containing the string 'Willie' in the 'Country' genre:"
    printf "\n\t\t\troon -a Willie -g Country"
    printf "\n\t\tPlay album containing the string 'Magic' in the 'Rock' genre:"
    printf "\n\t\t\troon -A Magic -g Rock"
    printf "\n\t\tGroup the zones listed in roon_api.ini Group_foobar:"
    printf "\n\t\t\troon -G foobar -c group"
    printf "\n\t\tNOTE: Use quotes to specify media names which contain spaces."
    printf "\n\t\tFor example, to play the album 'Love Bomb':"
    printf "\n\t\t\troon -A \"Love Bomb\"\n"
  }
  exit 1
}

show_roon_menu=
[ "$1" ] || show_roon_menu=1

ROON=/usr/local/Roon
ROONAPI=${ROON}/api
ROONETC=${ROON}/etc
ROONCONF=${ROONETC}/pyroonconf
LOCAL=false
[ -f ${ROONCONF} ] && . ${ROONCONF}

[[ ":$PATH:" == *":/usr/local/bin:"* ]] || export PATH=${PATH}:/usr/local/bin
[[ ":$PATH:" == *":/usr/local/Roon/bin:"* ]] || export PATH=${PATH}:/usr/local/Roon/bin

select_zone() {
  ${IFS+"false"} && unset oldifs || oldifs="$IFS"
  IFS=$'\n'
  if [ "${LOCAL}" = true ]
  then
    zones=`${ROON}/bin/get_zones | sed -e 's/\, /\,/g'`
  else
    zones=`ssh $user@$server "bash -l -c \"${ROON}/bin/get_zones | sed -e 's/\, /\,/g'\""`
  fi
  zone_options=( $( echo "${zones}" | awk -F "," ' { for(i=1;i<=NF;i++) printf "%s\n",$i }' ) )
  ${oldifs+"false"} && unset IFS || IFS="$oldifs"
  zone_options+=("Main Menu" "Quit")
  while true
  do
    PS3="${BOLD}Please enter the Roon zone you wish to use (numeric or text): ${NORMAL}"
    select opt in "${zone_options[@]}"
    do
        case "$opt,$REPLY" in
            "Main Menu",*|*,"Main Menu")
                main_menu
                break 2
                ;;
            "Quit",*|*,"Quit"|"quit",*|*,"quit")
                printf "\nExiting\n"
                exit 0
                ;;
            *,*)
                if [[ " ${zone_options[*]} " =~ " ${opt} " ]]
                then
                  echo "${BOLD}Executing Roon command to set default zone to: ${opt}${NORMAL}"
                  if [ "${LOCAL}" = true ]
                  then
                    ${ROON}/bin/set_zone "${opt}"
                  else
                    ssh $user@$server "bash -l -c \"${ROON}/bin/set_zone ${opt}\""
                  fi
                  break 2
                else
                  printf "\n\nInvalid option: ${opt}"
                  printf "\n\tPlease enter either the exact text or numeric designation"
                  printf "\n\tfor one of the listed options below.\n\n"
                  break
                fi
                ;;
        esac
    done
  done
}

select_default() {
  media="$1"
  pycom="python ${ROONAPI}/set_default.py"
  case "${media}" in
    "Set Default Album")
      setdefcom="${pycom} -A"
      listcom="list_albums"
      medtype="Album"
      ;;
    "Set Default Artist")
      setdefcom="${pycom} -a"
      listcom="list_artists"
      medtype="Artist"
      ;;
    "Set Default Composer")
      setdefcom="${pycom} -c"
      listcom="list_composers"
      medtype="Composer"
      ;;
    "Set Default Genre")
      setdefcom="${pycom} -g"
      listcom="list_genres"
      medtype="Genre"
      ;;
    "Set Default Playlist")
      setdefcom="${pycom} -p"
      listcom="list_playlists"
      medtype="Playlist"
      ;;
    "Set Default Radio")
      setdefcom="${pycom} -r"
      listcom="list_radio"
      medtype="Radio"
      ;;
    "Set Default Tag")
      setdefcom="${pycom} -t"
      listcom="list_tags"
      medtype="Tag"
      ;;
    *)
      return 1
      ;;
  esac
  printf "\nRetrieving ${medtype}s in your Roon library ..."
  ${IFS+"false"} && unset oldifs || oldifs="$IFS"
  IFS=$'\n'
  if [ "${LOCAL}" = true ]
  then
    media_options=( $(${listcom} __all__) )
  else
    media_options=( $(ssh $user@$server "bash -l -c \"${ROON}/bin/${listcom} __all__\"") )
  fi
  DEFAULT=`grep ^Default${medtype} ${ROONETC}/roon_api.ini | awk -F '=' ' { print $2 } '`
  # Remove leading and trailing spaces
  DEFAULT="$(echo -e "${DEFAULT}" | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//')"
  printf " Done\n\n"
  printf "Default${medtype} = ${DEFAULT}\n\n"

  ${oldifs+"false"} && unset IFS || IFS="$oldifs"
  media_options+=("Set Defaults Menu" "Main Menu" "Quit")
  while true
  do
    PS3="${BOLD}Please enter the ${medtype} you wish to set as default (numeric or text): ${NORMAL}"
    select opt in "${media_options[@]}"
    do
        case "$opt,$REPLY" in
            "Set Defaults Menu",*|*,"Set Defaults Menu")
                break 2
                ;;
            "Main Menu",*|*,"Main Menu")
                main_menu
                break 3
                ;;
            "Quit",*|*,"Quit"|"quit",*|*,"quit")
                printf "\nExiting\n"
                exit 0
                ;;
            *,*)
                echo "${BOLD}Setting Roon ${medtype} default to: ${opt}${NORMAL}"
                if [ "${LOCAL}" = true ]
                then
                    ${setdefcom} "${opt}"
                else
                    ssh $user@$server "bash -l -c \"${ROON}/bin/${setdefcom} ${opt}\""
                fi
                break 2
                ;;
        esac
    done
  done
}

select_media() {
  media="$1"
  case "${media}" in
    album)
      playcom="play_album"
      listcom="list_albums"
      medtype="Album"
      ;;
    artist)
      playcom="play_artist"
      listcom="list_artists"
      medtype="Artist"
      ;;
    composer)
      playcom="play_composer"
      listcom="list_composers"
      medtype="Composer"
      ;;
    genre)
      playcom="play_genre"
      listcom="list_genres"
      medtype="Genre"
      ;;
    playlist)
      playcom="play_playlist"
      listcom="list_playlists"
      medtype="Playlist"
      ;;
    station)
      playcom="play_radio"
      listcom="list_radio"
      medtype="Radio"
      ;;
    tag)
      playcom="play_tag"
      listcom="list_tags"
      medtype="Tag"
      ;;
    *)
      return 1
      ;;
  esac
  printf "\nRetrieving ${media}s in your Roon library ..."
  ${IFS+"false"} && unset oldifs || oldifs="$IFS"
  IFS=$'\n'
  if [ "${LOCAL}" = true ]
  then
    media_options=( $(${listcom} __all__) )
  else
    media_options=( $(ssh $user@$server "bash -l -c \"${ROON}/bin/${listcom} __all__\"") )
  fi
  DEFAULT=`grep ^Default${medtype} ${ROONETC}/roon_api.ini | awk -F '=' ' { print $2 } '`
  # Remove leading and trailing spaces
  DEFAULT="$(echo -e "${DEFAULT}" | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//')"
  printf " Done\n\n"
  printf "Default ${media}: ${DEFAULT}\n\n"

  ${oldifs+"false"} && unset IFS || IFS="$oldifs"
  media_options+=("Main Menu" "Quit")
  while true
  do
    PS3="${BOLD}Please enter the ${media} you wish to play (numeric or text): ${NORMAL}"
    select opt in "${media_options[@]}"
    do
        case "$opt,$REPLY" in
            "Main Menu",*|*,"Main Menu")
                main_menu
                break 2
                ;;
            "Quit",*|*,"Quit"|"quit",*|*,"quit")
                printf "\nExiting\n"
                exit 0
                ;;
            *,*)
                echo "${BOLD}Executing Roon command to play ${media}: ${opt}${NORMAL}"
                if [ "${LOCAL}" = true ]
                then
                    ${playcom} "${opt}"
                else
                    ssh $user@$server "bash -l -c \"${ROON}/bin/${playcom} ${opt}\""
                fi
                break 2
                ;;
        esac
    done
  done
}

list_defaults() {
  defaults_options=("Set Default Album" "Set Default Artist" "Set Default Composer" "Set Default Genre" "Set Default Playlist" "Set Default Radio" "Set Default Tag" "Main Menu" "Quit")
  while true
  do
    for media in Album Artist Composer Genre Playlist Radio Tag
    do
      DEFAULT=`grep ^Default${media} ${ROONETC}/roon_api.ini | awk -F '=' ' { print $2 } '`
      # Remove leading and trailing spaces
      DEFAULT="$(echo -e "${DEFAULT}" | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//')"
      printf "\nDefault ${media}: ${DEFAULT}"
    done
    printf "\n\n"
    PS3="${BOLD}Please enter the default you wish to set (numeric or text): ${NORMAL}"
    select opt in "${defaults_options[@]}"
    do
        case "$opt,$REPLY" in
            "Main Menu",*|*,"Main Menu")
                main_menu
                break 2
                ;;
            "Quit",*|*,"Quit"|"quit",*|*,"quit")
                printf "\nExiting\n"
                exit 0
                ;;
            *,*)
                select_default  "${opt}"
                break
                ;;
        esac
    done
  done
}

main_menu() {
  while true
  do
    PS3="${BOLD}Please enter your Roon command choice (numeric or text): ${NORMAL}"
    options=("Get/Set Defaults" "Get/Set Zone" "Play" "Pause" "Next Track" "Previous Track" "Mute" "Unmute" "Repeat ON" "Repeat OFF" "Shuffle ON" "Shuffle OFF" "List Albums" "List Artists" "List Composers" "List Genres" "List Playlists" "List Live Radio" "List Tags" "List Zones" "Select Album" "Select Artist" "Select Composer" "Select Genre" "Select Live Radio" "Select Playlist" "Select Tag" "Play Default Album" "Play Default Artist" "Play Default Composer" "Play Default Genre" "Play Default Radio" "Play Default Playlist" "Play Default Tag" "Quit")
    select opt in "${options[@]}"
    do
        case "$opt,$REPLY" in
            "Get/Set Defaults",*|*,"Get/Set Defaults")
                list_defaults
                break
                ;;
            "Get/Set Zone",*|*,"Get/Set Zone")
                [ -f ${ROONCONF} ] && . ${ROONCONF}
                if [ "${LOCAL}" = true ]
                then
                    if [ "${ROON_ZONE}" ]
                    then
                        echo "Current Roon Zone is ${ROON_ZONE}"
                    else
                        echo "No default Roon Zone is set in ${ROONCONF}"
                    fi
                else
                    roon_zone=`ssh $user@$server "bash -l -c \"grep ROON_ZONE ${ROONCONF}\""`
                    if [ "${roon_zone}" ]
                    then
                        echo "Current Roon Zone is ${roon_zone}"
                    else
                        echo "No default Roon Zone is set in ${ROONCONF}"
                    fi
                fi
                select_zone
                break
                ;;
            "Play",*|*,"Play")
                printf "\nExecuting Roon command to play ..."
                if [ "${LOCAL}" = true ]
                then
                    zone_command -c play
                else
                    ssh $user@$server "bash -l -c \"${ROON}/bin/zone_command -c play\""
                fi
                printf " Done\n\n"
                break
                ;;
            "Pause",*|*,"Pause")
                printf "\nExecuting Roon command to pause play ..."
                if [ "${LOCAL}" = true ]
                then
                    zone_command -c pause
                else
                    ssh $user@$server "bash -l -c \"${ROON}/bin/zone_command -c pause\""
                fi
                printf " Done\n\n"
                break
                ;;
            "Next Track",*|*,"Next Track")
                printf "\nExecuting Roon command to play next track ..."
                if [ "${LOCAL}" = true ]
                then
                    zone_command -c next
                else
                    ssh $user@$server "bash -l -c \"${ROON}/bin/zone_command -c next\""
                fi
                printf " Done\n\n"
                break
                ;;
            "Previous Track",*|*,"Previous Track")
                printf "\nExecuting Roon command to play previous track ..."
                if [ "${LOCAL}" = true ]
                then
                    zone_command -c previous
                else
                    ssh $user@$server "bash -l -c \"${ROON}/bin/zone_command -c previous\""
                fi
                printf " Done\n\n"
                break
                ;;
            "Mute",*|*,"Mute")
                printf "\nExecuting Roon command to mute audio ..."
                if [ "${LOCAL}" = true ]
                then
                    zone_command -c mute
                else
                    ssh $user@$server "bash -l -c \"${ROON}/bin/zone_command -c mute\""
                fi
                printf " Done\n\n"
                break
                ;;
            "Unmute",*|*,"Unmute")
                printf "\nExecuting Roon command to unmute audio ..."
                if [ "${LOCAL}" = true ]
                then
                    zone_command -c unmute
                else
                    ssh $user@$server "bash -l -c \"${ROON}/bin/zone_command -c unmute\""
                fi
                printf " Done\n\n"
                break
                ;;
            "Repeat ON",*|*,"Repeat ON")
                printf "\nExecuting Roon command to turn repeat on ..."
                if [ "${LOCAL}" = true ]
                then
                    zone_command -c repeat
                else
                    ssh $user@$server "bash -l -c \"${ROON}/bin/zone_command -c repeat\""
                fi
                printf " Done\n\n"
                break
                ;;
            "Repeat OFF",*|*,"Repeat OFF")
                printf "\nExecuting Roon command to turn repeat off ..."
                if [ "${LOCAL}" = true ]
                then
                    zone_command -c unrepeat
                else
                    ssh $user@$server "bash -l -c \"${ROON}/bin/zone_command -c unrepeat\""
                fi
                printf " Done\n\n"
                break
                ;;
            "Shuffle ON",*|*,"Shuffle ON")
                printf "\nExecuting Roon command to turn shuffle on ..."
                if [ "${LOCAL}" = true ]
                then
                    zone_command -c shuffle
                else
                    ssh $user@$server "bash -l -c \"${ROON}/bin/zone_command -c shuffle\""
                fi
                printf " Done\n\n"
                break
                ;;
            "Shuffle OFF",*|*,"Shuffle OFF")
                printf "\nExecuting Roon command to turn shuffle off ..."
                if [ "${LOCAL}" = true ]
                then
                    zone_command -c unshuffle
                else
                    ssh $user@$server "bash -l -c \"${ROON}/bin/zone_command -c unshuffle\""
                fi
                printf " Done\n\n"
                break
                ;;
            "List Albums",*|*,"List Albums")
                if [ "${LOCAL}" = true ]
                then
                    list_albums __all__
                else
                    ssh $user@$server "bash -l -c \"${ROON}/bin/list_albums __all__\""
                fi
                break
                ;;
            "List Artists",*|*,"List Artists")
                if [ "${LOCAL}" = true ]
                then
                    list_artists __all__
                else
                    ssh $user@$server "bash -l -c \"${ROON}/bin/list_artists __all__\""
                fi
                break
                ;;
            "List Composers",*|*,"List Composers")
                if [ "${LOCAL}" = true ]
                then
                    list_composers __all__
                else
                    ssh $user@$server "bash -l -c \"${ROON}/bin/list_composers __all__\""
                fi
                break
                ;;
            "List Genres",*|*,"List Genres")
                if [ "${LOCAL}" = true ]
                then
                    list_genres __all__
                else
                    ssh $user@$server "bash -l -c \"${ROON}/bin/list_genres __all__\""
                fi
                break
                ;;
            "List Playlists",*|*,"List Playlists")
                if [ "${LOCAL}" = true ]
                then
                    list_playlists __all__
                else
                    ssh $user@$server "bash -l -c \"${ROON}/bin/list_playlists __all__\""
                fi
                break
                ;;
            "List Live Radio",*|*,"List Live Radio")
                if [ "${LOCAL}" = true ]
                then
                    list_radio __all__
                else
                    ssh $user@$server "bash -l -c \"${ROON}/bin/list_radio __all__\""
                fi
                break
                ;;
            "List Tags",*|*,"List Tags")
                if [ "${LOCAL}" = true ]
                then
                    list_tags __all__
                else
                    ssh $user@$server "bash -l -c \"${ROON}/bin/list_tags __all__\""
                fi
                break
                ;;
            "List Zones",*|*,"List Zones")
                if [ "${LOCAL}" = true ]
                then
                    list_zones
                else
                    ssh $user@$server "bash -l -c \"${ROON}/bin/list_zones\""
                fi
                break
                ;;
            "Select Album",*|*,"Select Album")
                select_media album
                break
                ;;
            "Select Artist",*|*,"Select Artist")
                select_media artist
                break
                ;;
            "Select Composer",*|*,"Select Composer")
                select_media composer
                break
                ;;
            "Select Genre",*|*,"Select Genre")
                select_media genre
                break
                ;;
            "Select Playlist",*|*,"Select Playlist")
                select_media playlist
                break
                ;;
            "Select Live Radio",*|*,"Select Live Radio")
                select_media station
                break
                ;;
            "Select Tag",*|*,"Select Tag")
                select_media tag
                break
                ;;
            "Play Default Album",*|*,"Play Default Album")
                if [ "${LOCAL}" = true ]
                then
                    play_album
                else
                    ssh $user@$server "bash -l -c ${ROON}/bin/play_album"
                fi
                break
                ;;
            "Play Default Artist",*|*,"Play Default Artist")
                if [ "${LOCAL}" = true ]
                then
                    play_artist
                else
                    ssh $user@$server "bash -l -c ${ROON}/bin/play_artist"
                fi
                break
                ;;
            "Play Default Composer",*|*,"Play Default Composer")
                if [ "${LOCAL}" = true ]
                then
                    play_composer
                else
                    ssh $user@$server "bash -l -c ${ROON}/bin/play_composer"
                fi
                break
                ;;
            "Play Default Genre",*|*,"Play Default Genre")
                if [ "${LOCAL}" = true ]
                then
                    play_genre
                else
                    ssh $user@$server "bash -l -c ${ROON}/bin/play_genre"
                fi
                break
                ;;
            "Play Default Playlist",*|*,"Play Default Playlist")
                if [ "${LOCAL}" = true ]
                then
                    play_playlist
                else
                    ssh $user@$server "bash -l -c ${ROON}/bin/play_playlist"
                fi
                break
                ;;
            "Play Default Radio",*|*,"Play Default Radio")
                if [ "${LOCAL}" = true ]
                then
                    play_radio
                else
                    ssh $user@$server "bash -l -c ${ROON}/bin/play_radio"
                fi
                break
                ;;
            "Play Default Tag",*|*,"Play Default Tag")
                if [ "${LOCAL}" = true ]
                then
                    play_tag
                else
                    ssh $user@$server "bash -l -c ${ROON}/bin/play_tag"
                fi
                break
                ;;
            "Quit",*|*,"Quit"|"quit",*|*,"quit")
                printf "\nExiting\n"
                exit 0
                ;;
        esac
    done
  done
}

while getopts A:a:C:g:G:p:T:t:z:c:l:s:LSr:EuU flag; do
    case $flag in
        A)
            album="$OPTARG"
            ;;
        a)
            artist="$OPTARG"
            ;;
        C)
            composer="$OPTARG"
            ;;
        g)
            genre="$OPTARG"
            ;;
        p)
            playlist="$OPTARG"
            ;;
        T)
            track="$OPTARG"
            ;;
        t)
            tag="$OPTARG"
            ;;
        z)
            zone="$OPTARG"
            ;;
        c)
            comm="$OPTARG"
            ;;
        l)
            listname="$OPTARG"
            if [ "$listname" == "albums" ] || [ "$listname" == "album" ]
            then
                albumlist=1
            elif [ "$listname" == "artists" ] || [ "$listname" == "artist" ]
            then
                artistlist=1
            elif [ "$listname" == "artalbums" ] || [ "$listname" == "artalbum" ]
            then
                artalbumlist=1
            elif [ "$listname" == "composers" ] || [ "$listname" == "composer" ]
            then
                composerlist=1
            elif [ "$listname" == "genres" ] || [ "$listname" == "genre" ]
            then
                genrelist=1
            elif [ "$listname" == "genalbums" ] || [ "$listname" == "genalbum" ]
            then
                genalbumlist=1
            elif [ "$listname" == "genartists" ] || [ "$listname" == "genartist" ]
            then
                genartistlist=1
            elif [ "$listname" == "playlists" ] || [ "$listname" == "playlist" ]
            then
                playlistlist=1
            elif [ "$listname" == "stations" ] || [ "$listname" == "radio" ]
            then
                radiolist=1
            elif [ "$listname" == "tags" ] || [ "$listname" == "tag" ]
            then
                taglist=1
            elif [ "$listname" == "zones" ] || [ "$listname" == "zone" ]
            then
                zonelist=1
            else
                echo "Unknown list type: $listname"
                usage
            fi

            ;;
        G)
            zonegroup="$OPTARG"
            ;;
        L)
            if [ -f ${ROONCONF} ]
            then
                grep -v ^LOCAL= ${ROONCONF} > /tmp/roon$$
                echo "LOCAL=true" >> /tmp/roon$$
                cp /tmp/roon$$ ${ROONCONF}
                rm -f /tmp/roon$$
                . ${ROONCONF}
            else
                echo "${ROONCONF} does not exist"
                echo "RoonCommandLine is not installed locally"
            fi
            ;;
        r)
            radio="$OPTARG"
            ;;
        s)
            search="$OPTARG"
            ;;
        S)
            setdefs=1
            ;;
        E)
            showusage=
            showexamples=1
            usage
            ;;
        U)
            showusage=1
            showexamples=
            usage
            ;;
        u)
            usage
            ;;
    esac
done

[ "$search" ] || search="__all__"

# Set Defaults
[ "$setdefs" ] && {
    list_defaults
}

# Set Zone
[ "$zone" ] && {
    if [ "${LOCAL}" = true ]
    then
        ${ROON}/bin/set_zone $zone
    else
        ssh $user@$server "bash -l -c \"${ROON}/bin/set_zone $zone\""
    fi
}

# Zone Grouping
[ "$zonegroup" ] && {
    [ "$comm" == "group" ] || [ "$comm" == "ungroup" ] || comm=group
    if [ "${LOCAL}" = true ]
    then
        ${ROON}/bin/set_zone_group $comm $zonegroup
    else
        ssh $user@$server "bash -l -c \"${ROON}/bin/set_zone_group $comm $zonegroup\""
    fi
}

[ "$albumlist" ] && {
    if [ "${LOCAL}" = true ]
    then
        list_albums $search
    else
        ssh $user@$server "bash -l -c \"${ROON}/bin/list_albums $search\""
    fi
}
[ "$artistlist" ] && {
    if [ "${LOCAL}" = true ]
    then
        list_artists $search
    else
        ssh $user@$server "bash -l -c \"${ROON}/bin/list_artists $search\""
    fi
}
[ "$artalbumlist" ] && {
    [ "$artist" ] || {
        [ "$search" ] && artist=$search
    }
    [ "$album" ] || album="__all__"
    if [ "${LOCAL}" = true ]
    then
        list_artist_albums "$artist" "$album"
    else
        ssh $user@$server "bash -l -c \"${ROON}/bin/list_artist_albums $artist $album\""
    fi
    album=
    artist=
}
[ "$composerlist" ] && {
    if [ "${LOCAL}" = true ]
    then
        list_composers $search
    else
        ssh $user@$server "bash -l -c \"${ROON}/bin/list_composers $search\""
    fi
}
[ "$genrelist" ] && {
    if [ "${LOCAL}" = true ]
    then
        list_genres $search
    else
        ssh $user@$server "bash -l -c \"${ROON}/bin/list_genres $search\""
    fi
}
[ "$genalbumlist" ] && {
    if [ "${LOCAL}" = true ]
    then
        list_genre_albums "$genre" "$album"
    else
        ssh $user@$server "bash -l -c \"${ROON}/bin/list_genre_artists $genre $album\""
    fi
    album=
    genre=
}
[ "$genartistlist" ] && {
    [ "$genre" ] || {
        [ "$search" ] && genre=$search
    }
    if [ "${LOCAL}" = true ]
    then
        list_genre_artists "$genre" "$artist"
    else
        ssh $user@$server "bash -l -c \"${ROON}/bin/list_genre_artists $genre $artist\""
    fi
    artist=
    genre=
}
[ "$playlistlist" ] && {
    if [ "${LOCAL}" = true ]
    then
        list_playlists $search
    else
        ssh $user@$server "bash -l -c \"${ROON}/bin/list_playlists $search\""
    fi
}
[ "$radiolist" ] && {
    if [ "${LOCAL}" = true ]
    then
        list_radio $search
    else
        ssh $user@$server "bash -l -c \"${ROON}/bin/list_radio $search\""
    fi
}
[ "$taglist" ] && {
    if [ "${LOCAL}" = true ]
    then
        list_tags $search
    else
        ssh $user@$server "bash -l -c \"${ROON}/bin/list_tags $search\""
    fi
}
[ "$zonelist" ] && {
    if [ "${LOCAL}" = true ]
    then
        list_zones $search
    else
        ssh $user@$server "bash -l -c \"${ROON}/bin/list_zones $search\""
    fi
}
# First, handle album and artist requested
[ "$album" ] && [ "$artist" ] && {
    [ "${album}" == "default" ] && album=
    [ "${artist}" == "default" ] && artist=
    if [ "${LOCAL}" = true ]
    then
        play_artist_album "$artist" "$album"
    else
        ssh $user@$server "bash -l -c \"${ROON}/bin/play_artist_album $artist $album\""
    fi
    album=
    artist=
}
# Second, handle artist and track requested
[ "$track" ] && [ "$artist" ] && {
    if [ "${LOCAL}" = true ]
    then
        play_artist_track "$artist" "$track"
    else
        ssh $user@$server "bash -l -c \"${ROON}/bin/play_artist_track $artist $track\""
    fi
    artist=
}
# Third, handle album or artist and genre requested
[ "$album" ] && [ "$genre" ] && {
    [ "${album}" == "default" ] && album=
    if [ "${LOCAL}" = true ]
    then
        play_genre_album "$genre" "$album"
    else
        ssh $user@$server "bash -l -c \"${ROON}/bin/play_genre_album $genre $album\""
    fi
    album=
    genre=
}
[ "$artist" ] && [ "$genre" ] && {
    [ "${artist}" == "default" ] && artist=
    if [ "${LOCAL}" = true ]
    then
        play_genre_artist "$genre" "$artist"
    else
        ssh $user@$server "bash -l -c \"${ROON}/bin/play_genre_artist $genre $artist\""
    fi
    artist=
    genre=
}
[ "$album" ] && {
    [ "${album}" == "default" ] && album=
    if [ "${LOCAL}" = true ]
    then
        play_album "$album"
    else
        ssh $user@$server "bash -l -c \"${ROON}/bin/play_album $album\""
    fi
}
[ "$artist" ] && {
    [ "${artist}" == "default" ] && artist=
    if [ "${LOCAL}" = true ]
    then
        play_artist "$artist"
    else
        ssh $user@$server "bash -l -c \"${ROON}/bin/play_artist $artist\""
    fi
}
[ "$composer" ] && {
    [ "${composer}" == "default" ] && composer=
    if [ "${LOCAL}" = true ]
    then
        play_composer "$composer"
    else
        ssh $user@$server "bash -l -c \"${ROON}/bin/play_composer $composer\""
    fi
}
[ "$genre" ] && {
    [ "${genre}" == "default" ] && genre=
    if [ "${LOCAL}" = true ]
    then
        play_genre "$genre"
    else
        ssh $user@$server "bash -l -c \"${ROON}/bin/play_genre $genre\""
    fi
}
[ "$playlist" ] && {
    [ "${playlist}" == "default" ] && playlist=
    if [ "${LOCAL}" = true ]
    then
        play_playlist "$playlist"
    else
        ssh $user@$server "bash -l -c \"${ROON}/bin/play_playlist $playlist\""
    fi
}
[ "$tag" ] && {
    [ "${tag}" == "default" ] && tag=
    if [ "${LOCAL}" = true ]
    then
        play_tag "$tag"
    else
        ssh $user@$server "bash -l -c \"${ROON}/bin/play_tag $tag\""
    fi
}
[ "$radio" ] && {
    [ "${radio}" == "default" ] && radio=
    if [ "${LOCAL}" = true ]
    then
        play_radio "${radio}"
    else
        ssh $user@$server "bash -l -c \"${ROON}/bin/play_radio ${radio}\""
    fi
}

[ "$comm" ] && {
    case "$comm" in
    "shuffle"|"unshuffle"|"repeat"|"unrepeat"|"mute"|"unmute"|"next"|"previous"|"play"|"pause"|"stop"|"playpause")
        if [ "${LOCAL}" = true ]
        then
            zone_command -c ${comm}
        else
            ssh $user@$server "bash -l -c \"${ROON}/bin/zone_command -c ${comm}\""
        fi
        ;;
    "group"|"ungroup")
        ;;
    *)
        echo "Unrecognized Roon command: $comm"
        usage
        ;;
    esac
}

[ "${show_roon_menu}" ] && {
  main_menu
}

exit 0
