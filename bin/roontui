#!/usr/bin/env bash
#
# roontui - Frontend for roon-tui terminal user interface for Roon
#           Default to ~/.config/roon-tui/ for roon-tui configuration and log files
#
# See: https://github.com/TheAppgineer/roon-tui
#      https://github.com/doctorfree/RoonCommandLine
#
# Author: Ronald Joe Record <ronaldrecord@gmail.com>
# Written: 17-May-2024
#
# Usage: roontui [OPTIONS]
# 
# Options:
#   -b, --binary <BINARY>     Path to the roon-tui binary [default: ~/.local/bin/roon-tui]
#   -c, --config <CONFIG>     Path to the config.json file [default: ~/.config/roon-tui/config.json]
#   -i, --ip <IP>             IP address of the Server, disables server discovery
#   -p, --port <PORT>         Port number of the Server [default: 9330]
#   -l, --log <LOG>           Path to the log file [default: ~/.config/roon-tui/roon-tui.log]
#   -v, --verbose             Enable verbose logging to file
#   -u, --no-unicode-symbols  Disable the use of Unicode symbols
#   -U, --upgrade             Upgrade roon-tui if a newer version is available and exit
#   -h, --help                Print help
#   -V, --version             Print version

ROON="/usr/local/Roon"
TUI_CONFDIR="${HOME}/.config/roon-tui"
TUI_CONF="${TUI_CONFDIR}/config.json"
TUI_LOG="${TUI_CONFDIR}/roon-tui.log"
TUI_BIN="${HOME}/.local/bin/roon-tui"
[ -x ${TUI_BIN} ] || {
  if [ -x /opt/homebrew/bin/roon-tui ]; then
    TUI_BIN="/opt/homebrew/bin/roon-tui"
  else
    if command -v roon-tui > /dev/null; then
      TUI_BIN=$(command -v roon-tui)
    else
      TUI_BIN=
    fi
  fi
}

usage() {
  printf "\nUsage: roontui [OPTIONS]"
  printf "\nOptions:"
  printf "\n  -b, --binary <BINARY>     Path to the roon-tui binary"
  printf "\n  -c, --config <CONFIG>     Path to the config.json file"
  printf "\n  -i, --ip <IP>             IP address of the Server, disables server discovery"
  printf "\n  -p, --port <PORT>         Port number of the Server [default: 9330]"
  printf "\n  -l, --log <LOG>           Path to the log file"
  printf "\n  -v, --verbose             Enable verbose logging to file"
  printf "\n  -u, --no-unicode-symbols  Disable the use of Unicode symbols"
  printf "\n  -U, --upgrade             Upgrade roon-tui if a newer version is available and exit"
  printf "\n  -h, --help                Print help"
  printf "\n  -V, --version             Print version\n"
  printf "\nDefaults:"
  printf "\n  Binary location:          ${TUI_BIN}"
  printf "\n  Configuration location:   ${TUI_CONF}"
  printf "\n  Log file location:        ${TUI_LOG}\n\n"
  exit 1
}

# check_version release_version install_version
check_version() {
  release_version="$1"
  install_version="$2"

  release_major=$(echo ${release_version} | awk -F '.' '{ print $1 }')
  release_midde=$(echo ${release_version} | awk -F '.' '{ print $2 }')
  release_minor=$(echo ${release_version} | awk -F '.' '{ print $3 }')
  [ "${release_major}" ] || release_major=0
  [ "${release_midde}" ] || release_midde=0
  [ "${release_minor}" ] || release_minor=0

  install_major=$(echo ${install_version} | awk -F '.' '{ print $1 }')
  install_midde=$(echo ${install_version} | awk -F '.' '{ print $2 }')
  install_minor=$(echo ${install_version} | awk -F '.' '{ print $3 }')
  [ "${install_major}" ] || install_major=0
  [ "${install_midde}" ] || install_midde=0
  [ "${install_minor}" ] || install_minor=0

  if [ ${release_major} -gt ${install_major} ]; then
    echo "${release_version}"
  else
    if [ ${release_midde} -gt ${install_midde} ]; then
      echo "${release_version}"
    else
      if [ ${release_minor} -gt ${install_minor} ]; then
        echo "${release_version}"
      else
        echo ""
      fi
    fi
  fi
}

IP_OPT=
PORT_OPT=
UNICODE_OPT=
VERB_OPT=
VERSION_OPT=
while [[ $1 ]]; do
  case "$1" in
    -b | --binary)
      if [ -x "$2" ]; then
        TUI_BIN="$2"
      else
        printf "\nWARNING: specified roon-tui binary, $2, not found. Using default\n"
      fi
      shift 2
      ;;
    -c | --config)
      if [ -f "$2" ]; then
        TUI_CONF="$2"
      else
        printf "\nWARNING: specified roon-tui configuration, $2, not found. Using default\n"
      fi
      shift 2
      ;;
    -i | --ip)
      IP_OPT="-i $2"
      shift 2
      ;;
    -p | --port)
      PORT_OPT="-p $2"
      shift 2
      ;;
    -l | --log)
      logdir=$(dirname "$2")
      if [ -d "${logdir}" ]; then
        TUI_LOG="$2"
      else
        printf "\nWARNING: specified roon-tui log folder, ${logdir}, does not exist. Using default\n"
      fi
      shift 2
      ;;
    -v | --verbose)
      VERB_OPT="-v"
      shift
      ;;
    -u | --no-unicode-symbols)
      UNICODE_OPT="-u"
      shift
      ;;
    -U | --upgrade)
      if [ -x ${ROON}/etc/install-roon-tui ]; then
        if [ "${TUI_BIN}" ]; then
          tui_release=$(${ROON}/etc/install-roon-tui version)
          tui_install=$(${TUI_BIN} --version | awk '{ print $2 }')
          update_tui=$(check_version "${tui_release}" "${tui_install}")
          if [ "${update_tui}" ]; then
            ${ROON}/etc/install-roon-tui
          else
            printf "\nInstalled version of roon-tui, ${tui_install}, is current âœ¨ ðŸŒŸ âœ¨\n\n"
          fi
        else
          ${ROON}/etc/install-roon-tui
        fi
        exit 0
      else
        printf "\n${ROON}/etc/install-roon-tui not found. Upgrade RoonCommandLine.\n\n"
        exit 1
      fi
      shift
      ;;
    -h | --help)
      usage
      shift
      ;;
    -V | --version)
      VERSION_OPT="-V"
      shift
      ;;
    *)
      printf "\nUnsupported roon-tui command option: $1\n"
      usage
      ;;
  esac
done

if [ "${TUI_BIN}" ]; then
  ${TUI_BIN} -c ${TUI_CONF} -l ${TUI_LOG} \
                ${IP_OPT} ${PORT_OPT} ${UNICODE_OPT} ${VERB_OPT} ${VERSION_OPT}
else
  printf "\nCannot locate roon-tui"
  printf "\nInstall roon-tui with:"
  printf "\n\troon -I\n\n"
fi
